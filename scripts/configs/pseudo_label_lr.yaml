datasets:
#  - name: bdd
  # #   # categories:
  # #   #   - trailer
  # #   #   - train
  # #   # - wheelchair
#  - name: coco
  - name: lvis
#  - name: objectnet
    #subset: small_sample
    #subset: class_subset2
    # categories:
    #    - air freshener
  #    - eyeglasses
    #   - egg carton
    #   - combination lock
    #   - soap bar
    #   - kettle
shared_session_params: # see SessionParams
  batch_size: 1 
  shortlist_size: 50
  index_options: 
    use_vec_index: True # for bdd and coco.
  index_spec : 
      i_name: multiscalemed
      # c_name: small_sample
#      i_name: multiscalecoarse
      # i_name: coarse
  agg_method: plain_score
  # agg_method: avg_score
  aug_larger: greater
  pass_ground_truth: False
shared_bench_params: # see BenchParams
  max_feedback: null
  box_drop_prob: 0. 
  max_results: 10 # max positive results
  n_batches : 60 # max batches
  provide_textual_feedback: False
  query_template : "a {}"
variants:
    - name: baseline
      interactive: plain
#     - name: lknn
#       max_samples: 20
#       interactive: lknn
#       start_policy: after_first_positive
#       interactive_options:
#         gamma: calibrate
# #        gamma: .1
#         use_clip_as_gamma: True
#         matrix_options:
#           knn_path: nndescent60
#           self_edges : False
#           symmetric: False
#           normalized_weights : False
#           knn_k: 
#             choose: [10]
#           edist: 
#             choose: [.05]
#             # choose: [1.6]
#             # choose: [.05]
#             # choose: [.00075,  .00625, .2, .4, 3.2]
#             # choose: [.05]
#             # choose: [0.00038, .00075, 3.2]
#             # choose: [.05]
#         normalize_scores : False
#         sigmoid_before_propagate: True  
#         calib_a: 
#           choose: [10.]
#         calib_b: 
#           choose: [-0.4]
#         prior_weight: 
#           choose: [0.] # good for unnormalized
    # - name: active_search_l0
    #   max_samples: 20
    #   interactive: active_search
    #   start_policy: after_first_positive
    #   interactive_options:
    #     gamma: .1
    #     use_clip_as_gamma: True
    #     implementation: 
    #       choose: [vectorized, loop]
    #     lookahead: 1
    #     time_horizon: 30 # make equal to n_batches
    #     pruning_on: True # makes no difference for lookahead 0
    #     matrix_options:
    #       knn_path: nndescent10
    #       self_edges : False
    #       normalized_weights : False
    #       symmetric: False
    #       knn_k: 
    #         choose: [5]
    #       edist: 
    #         choose: [.05]
    #         # choose: [1.6]
    #         # choose: [.05]
    #         # choose: [.00075,  .00625, .2, .4, 3.2]
    #         # choose: [.05]
    #         # choose: [0.00038, .00075, 3.2]
    #         # choose: [.05]
    #     normalize_scores : False
    #     sigmoid_before_propagate: True  
    #     calib_a: 
    #       choose: [10.]
    #     calib_b: 
    #       choose: [-0.4]
    #     prior_weight: 
    #       choose: [0.] # good for unnormalized

    ### want: 
      ## - plain log reg
      ## + norm reg.
      ## + query reg.
      ## + semi-supervised reg.
#     - name: multi_reg_ce_loss_normreg_sum
#       max_samples: 10 #10
#       interactive: multi_reg
# #      start_policy: after_first_positive_and_negative
#       start_policy: after_first_reversal
#       interactive_options:
#         label_loss_type: pairwise_logistic_loss
#         rank_loss_margin: .2
#         reg_data_lambda: 0
#         use_qvec_norm: False
#         reg_norm_lambda: 
#             choose: [0.]
#         verbose: False
#         max_iter: 200
#         lr: 1.
#         matrix_options:
#           knn_path: nndescent60
#           symmetric: True
#           self_edges: False
#           normalized_weights: False
#           knn_k: 
#             choose: [10]
#           edist: 
#             choose: [.05]
#     - name: multi_reg_ce_loss_qreg_sum
#       max_samples: 10 #10
#       interactive: multi_reg
# #      start_policy: after_first_positive_and_negative
#       start_policy: after_first_reversal
#       interactive_options:
#         label_loss_type: pairwise_logistic_loss
#         rank_loss_margin: .2
#         reg_data_lambda: 0
#         use_qvec_norm: True
#         reg_norm_lambda: 
#             choose: [.1, .3]
#         verbose: False
#         max_iter: 200
#         lr: 1.
#         matrix_options:
#           knn_path: nndescent60
#           symmetric: True
#           self_edges: False
#           normalized_weights: False
#           knn_k: 
#             choose: [10]
#           edist: 
#             choose: [.05]
    - name: multi_reg
      max_samples: 20
      interactive: multi_reg
      # start_policy:
      #     choose: [after_first_positive_and_negative]
      # start_policy: after_first_reversal
      start_policy: 
        choose: [after_first_batch]
      interactive_options:
#        label_loss_type: pairwise_logistic_loss
        label_loss_type: 
            choose: [ce_loss, pairwise_logistic_loss]
        rank_loss_margin: .2
        reg_data_lambda:
            choose: [1000.]
        use_qvec_norm: True
        reg_norm_lambda:
            choose: [100.]
        reg_query_lambda: 
            choose: [10.]
        verbose: False
        max_iter: 200
        pos_weight: 
          choose: ['balanced']
        lr: 1.
        matrix_options:
          knn_path: nndescent60
          symmetric: True
          self_edges: False
          normalized_weights: 
              choose: [False]
          knn_k: 
            choose: [10]
          edist: 
            choose: [.03]
#     - name: multi_reg
#       max_samples: 20
#       interactive: multi_reg
#       start_policy:
#           choose: [after_first_positive_and_negative]
#       # start_policy: after_first_reversal
# #      start_policy: from_start
#       interactive_options:
# #        label_loss_type: pairwise_logistic_loss
#         label_loss_type: 
#             choose: [ce_loss]
#         rank_loss_margin: .2
#         reg_data_lambda:
#             choose: [3000.]
#         use_qvec_norm: True
#         reg_norm_lambda:
#             choose: [300.]
#         reg_query_lambda: 
#             choose: [30.]
#         verbose: False
#         max_iter: 200
#         lr: 1.
#         matrix_options:
#           knn_path: nndescent60
#           symmetric: True
#           self_edges: False
#           normalized_weights: True
#           knn_k: 
#             choose: [10]
#           edist: 
#             choose: [.05]
    # - name: active_search
    #   max_samples: 20
    #   interactive: active_search
    #   start_policy: after_first_positive
    #   interactive_options:
    #     implementation: 
    #       vectorized
    #     pruning_on: False
    #     gamma:
    #       # choose:
    #         mode: clip
    #         calibration: 
    #             choose: [ground_truth, raw]
    #         # - mode: fixed
    #         #   value:
    #         #     choose: [.01, .1]
    #     time_horizon: 
    #         choose: [60]
    #     adjust_horizon: True
    #     matrix_options:
    #       knn_path: nndescent60
    #       symmetric: False
    #       self_edges : False
    #       normalized_weights : False
    #       knn_k: 
    #         choose: [20]
    #       edist: 
    #         choose: [.05]
    #         # choose: [1.6]
    #         # choose: [.05]
    #         # choose: [.00075,  .00625, .2, .4, 3.2]
    #         # choose: [.05]
    #         # choose: [0.00038, .00075, 3.2]
    #         # choose: [.05]
    #     normalize_scores : False
    #     sigmoid_before_propagate: True  
    #     calib_a: 
    #       choose: [10.]
    #     calib_b: 
    #       choose: [-0.4]
    #     prior_weight: 
    #       choose: [0.] # good for unnormalized
    # - name: active_search_l1
    #   max_samples: 20
    #   interactive: active_search
    #   start_policy: after_first_positive
    #   interactive_options:
    #     lookahead: 2
    #     time_horizon: 30 # make equal to n_batches
    #     pruning_on: False
    #     matrix_options:
    #       knn_path: nndescent60
    #       symmetric : False
    #       self_edges : False
    #       normalized_weights : False
    #       knn_k: 
    #         choose: [10]
    #       edist: 
    #         choose: [.05]
    #         # choose: [1.6]
    #         # choose: [.05]
    #         # choose: [.00075,  .00625, .2, .4, 3.2]
    #         # choose: [.05]
    #         # choose: [0.00038, .00075, 3.2]
    #         # choose: [.05]
    #     normalize_scores : False
    #     sigmoid_before_propagate: True  
    #     calib_a: 
    #       choose: [10.]
    #     calib_b: 
    #       choose: [-0.4]
    #     prior_weight: 
    #       choose: [0.] # good for unnormalized
    # - name: baseline
    #   interactive: plain
    # - name: log_reg2
    #   max_samples: 10
    #   interactive: log_reg2
    #   interactive_options:
    #     class_weights: 
    #       choose: [1.]
    #     scale: centered
    #     reg_lambda: 
    #       choose: [.25] #, .5, 1., 2., 4., 8., 16., 32.]
    #       # choose: [4.]
    #     max_iter: 200.
    #     lr: 1.
    #     fit_intercept: false
#     - name: pseudo_lr_switch # change to use new config
#       max_samples: 20
#       interactive: pseudo_lr
#       interactive_options:
#         switch_over: True
#         real_sample_weight: 
#           choose: [1.]
#         sample_size: 
#           choose : [10000]
#         log_reg_params:
#           class_weights: 
#             choose: [1.]
#           scale: centered
#           reg_lambda: 
#             # choose: [.25, .5, 1., 2.]
#             choose : [1.]
#           max_iter: 200.
#           lr: 1
#           fit_intercept: False
#         label_prop_params:
#           matrix_options:
#             knn_path: nndescent10
#             self_edges : False
#             normalized_weights : False
#             knn_k: 
#               choose: [10]
#             edist: 
# #              choose: [.2, .1, .05] # should you use a lower prop for negatives and a larger for positives?
#               choose: [.05]
#           normalize_scores : False
#           sigmoid_before_propagate: True  
#           calib_a: 
#             choose: [10.]
#           calib_b: 
#             choose: [-0.4]
#           prior_weight: 
#             choose: [1.] # good for unnormalized
    # - name: knn_prop2
    #   max_samples: 20
    #   interactive: knn_prop2
    #   interactive_options:
    #     matrix_options:
    #       knn_path: nndescent10
    #       self_edges : False
    #       symmetric: True
    #       normalized_weights : False
    #       knn_k: 
    #         choose: [10]
    #       edist: 
    #         #choose: [.00625, .0125, .025, .05, .1, .2, .4, .8, 1.6]
    #         # choose: [1.6]
    #         choose: [.05]
    #         # choose: [.00075,  .00625, .2, .4, 3.2]
    #         # choose: [.05]
    #         # choose: [0.00038, .00075, 3.2]
    #         # choose: [.05]
    #     normalize_scores : False
    #     sigmoid_before_propagate: True  
    #     calib_a: 
    #       choose: [10.]
    #     calib_b: 
    #       choose: [-0.4]
    #     prior_weight: 
    #       choose: [1.] # good for unnormalized
